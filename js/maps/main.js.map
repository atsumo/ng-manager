{"version":3,"sources":["main.js","api/api-service.js","auth/auth-service.js","endpoint/endpoint-controller.js","endpoint/endpoint-service.js","entity/entity-controller.js","entity/entity-directive.js","entity/entity-filter.js","entity/entity-service.js","error/error-service.js","i18n/messages.en.js","i18n/messages.ja.js","i18n/translate.js","index/index-controller.js","login/login-controller.js","schema/schema-form.js","schema/schema-normalizer.js","schema/schema-validator.js","side/side-service.js","top/top-controller.js","util/date-picker.js"],"names":["angular","module","config","$routeProvider","$mdThemingProvider","$sceDelegateProvider","console","info","theme","primaryPalette","accentPalette","when","controller","templateUrl","resourceUrlWhitelist","run","$rootScope","$endpointService","$apiService","$errorService","$location","$authService","ep","getSelected","token","search","saveToken","url","login","checkLogin","setup","then","err","showError","factory","$q","$http","getUrl","path","replace","resolution","resolve","result","data","rejection","reject","msg","message","statusText","Error","status","get","query","method","params","post","put","del","getConfig","log","$emit","stack","inc","dec","request","requestError","response","responseError","$cookies","tokens","localStorage","getItem","JSON","parse","_","find","name","headerName","headers","$httpProvider","interceptors","push","logout","filter","setItem","stringify","item","findWhere","indexOf","list","map","t","pick","$scope","$schemaForm","$filter","max_num","endpoints_org","getAll","endpoints","slice","remove","index","select","location","hash","add","endpoint","section","page","loadMore","length","file","document","getElementById","files","reader","FileReader","entities","readAsText","onload","e","target","error","i","filename","Date","content","window","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fileSystem","root","getFile","create","exclusive","fileEntry","createWriter","fileWriter","blob","Blob","type","write","onwriteend","link","createElement","href","toURL","download","body","appendChild","click","removeChild","onerror","code","showForm","$event","showDialog","title","event","schema","properties","maxLength","minLength","format","style","required","submit","scope","deferred","defer","entity","promise","selected","this","save","splice","each","$routeParams","$entityService","$schemaNormalizer","$window","isLoading","kind","limit","loadCount","isSearch","isFilter","filter_q","getFields","entityConfig","features","fields","keys","field","id","label","substr","getSearchSchema","searchSchema","rows","edit","row","editing","blur","setTimeout","resize","offset","concat","searchForm","toggleSearchform","toggled","rect","getBoundingClientRect","th","Math","floor","innerHeight","top","height","$on","directive","restrict","opening","open","close","$document","key","getKey","removing","$broadcast","cancelRemoving","off","$mdDialog","element","saving","orig","input","value","saveField","$digest","focus","bind","evt","keyCode","preview","openOpt","show","template","targetEvent","$compile","append","service","getEntityConfig","normalizeFields","opts","undefined","spec","_this","showSide","primaryKey","encodeURIComponent","join","import","export","$mdToast","toString","closeToast","hide","duration","position","$translateLoaderProvider","translations","Add","Cancel","Close","Create","Endpoints","Entities","Name","Update","Modify","Remove","Search","Settings","Submit","Top","Add the endpoint","Entity configuration not found for {{kind}}","provider","tables","mergeTables","table","lang","merge","$get","options","addTables","newTables","$translateProvider","useLoader","determinePreferredLanguage","$mdSidenav","$timeout","$interval","$translate","$translateLoader","toggleMenu","toggle","site","head","progress","mode","p","cancel","openRight","i18n","refresh","addEventListener","$sideContent","$schemaValidator","validator","errors","validate","forEach","hasError","submitter","interim","canceller","$new","$templateCache","linker","items","addClass","normalize","$$normalized","prop","keyOrder","formats","date-time","date","time","utc-millisec","isNaN","parseInt","regex","RegExp","color","uri","email","ipv4","ipv6","host-name","tv4","addFormat","test","val","validateMultiple","valid","keyPath","dataPath","split","shift","$rootElement","$mdTheming","$animate","lastScope","lastElement","$destroy","app","lineColor","textColor","mask","picker","$","css","call"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\nangular\n.module('ngManager', [\n  'ngRoute',\n  'ngAnimate',\n  'ngAria',\n  'ngMaterial',\n  'pascalprecht.translate',\n  'infinite-scroll',\n  'datePicker',\n  'ngCookies'\n])\n.config(function($routeProvider, $mdThemingProvider, $sceDelegateProvider) {\n\n  console.info('Configuring theme');\n  $mdThemingProvider.theme('menu')\n  .primaryPalette('indigo')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('endpoint')\n  .primaryPalette('indigo')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('entity')\n  .primaryPalette('indigo')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('login')\n  .primaryPalette('indigo')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('side')\n  .primaryPalette('teal')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('dialog')\n  .primaryPalette('indigo')\n  .accentPalette('orange')\n  ;\n  $mdThemingProvider.theme('previewDialog')\n  .primaryPalette('teal')\n  .accentPalette('orange')\n  ;\n\n  console.info('Configuring routings');\n\n  $routeProvider\n  .when('/endpoints', {\n    controller: 'EndpointCtrl',\n    templateUrl: 'endpoint.html'\n  })\n  .when('/top', {\n    controller: 'TopCtrl',\n    templateUrl: 'top.html'\n  })\n  .when('/entity/:kind', {\n    controller: 'EntityCtrl',\n    templateUrl: 'entity/index.html'\n  })\n  .when('/login', {\n    controller: 'LoginCtrl',\n    templateUrl: 'login.html'\n  })\n  ;\n\n  $sceDelegateProvider.resourceUrlWhitelist([\n    // Allow same origin resource loads.\n    'self',\n    // Allow loading from our assets domain.  Notice the difference between * and **.\n    '**'\n  ]);\n\n\n})\n.run(function($rootScope, $endpointService, $apiService, $errorService, $location, $authService) {\n\n  console.info('Started running ng-manager');\n\n  // Check last endpoints\n  var ep = $endpointService.getSelected();\n  if (!ep) {\n    // Select endpoints\n    $location.url('/endpoints');\n  } else {\n    var token = $location.search().token;\n    if(token){\n      $authService.saveToken(token,ep);\n      $location.url('/top');\n    }\n\n    $rootScope.login = $authService.checkLogin(ep);\n\n    $apiService\n    .setup()\n    .then(function() {\n      //location.hash = 'top';\n    }, function(err) {\n      $errorService.showError(err);\n    });\n  }\n})\n;\n\n","/* global _ */\nangular\n.module('ngManager')\n.factory('$apiService', function($q, $endpointService, $http, $rootScope) {\n\n  var config = null;\n\n  // Resolves URL from path data\n  var getUrl = function(path) {\n    var ep = $endpointService.getSelected();\n    var url = ep.url.replace(/(.*)\\/+$/,'$1');\n    path = path.replace(/^\\/+(.*)$/, '$1');\n    return url + '/' + path;\n  };\n\n  var resolution = function(resolve) {\n    return function(result) {\n      return resolve(result.data);\n    };\n  };\n\n  var rejection = function(reject) {\n    return function(result) {\n      var msg = (result.data && result.data.message) || result.statusText;\n      var err = new Error(msg);\n      err.status = status;\n      reject(err);\n    };\n  };\n\n  // sends GET request\n  var get = function(path, query) {\n    return $q(function(resolve, reject) {\n      $http({\n        url: getUrl(path),\n        method: 'GET',\n        params: query\n      })\n      .then(resolution(resolve), rejection(reject));\n    });\n  };\n\n  // sends POST request\n  // data will be stringified as JSON object\n  var post = function(path, data) {\n    return $q(function(resolve, reject) {\n      $http({\n        url: getUrl(path),\n        method: 'PUT',\n        data: data\n      })\n      .then(resolution(resolve), rejection(reject));\n    });\n  };\n\n  // sends PUT request\n  // data will be stringified as JSON object\n  var put = function(path, data) {\n    return $q(function(resolve, reject) {\n      $http({\n        url: getUrl(path),\n        method: 'PUT',\n        data: data\n      })\n      .then(resolution(resolve), rejection(reject));\n    });\n  };\n\n  var del = function(path, query) {\n    return $q(function(resolve, reject) {\n      $http({\n        url: getUrl(path),\n        method: 'DELETE',\n        params: query\n      })\n      .then(resolution(resolve), rejection(reject));\n    });\n  };\n\n  var search = function(path, query) {\n    return $q(function(resolve, reject) {\n      $http({\n        url: getUrl(path),\n        method: 'GET',\n        params: query\n      })\n      .then(resolution(resolve), rejection(reject));\n    });\n  };\n\n  var getConfig = function() {\n    return $q(function(resolve, reject) {\n      if (config !== null) {\n        resolve(config);\n      } else {\n        console.info('Getting config');\n        get('/config')\n        .then(\n          resolve,\n          reject\n        );\n      }\n    });\n  };\n\n  return {\n\n    setup: function() {\n      console.log('apiService.setup');\n      config = null;\n      return getConfig().then(function(data) {\n        config = data;\n        console.log(config);\n        $rootScope.$emit('config', config);\n        return config;\n      }, function(err) {\n        return err;\n      });\n    },\n\n    getConfig: function() {\n      return config;\n    },\n\n    get: get,\n\n    post: post,\n\n    put: put,\n\n    del: del,\n\n    search: search\n\n  };\n})\n.factory('progressHttpInterceptor', function($rootScope, $q) {\n  var stack = 0;\n  var inc = function() {\n    if (stack++ === 0) {\n      $rootScope.$emit('progress.start');\n    }\n  };\n  var dec = function() {\n    if (--stack === 0) {\n      stack = 0;\n      $rootScope.$emit('progress.end');\n    }\n  };\n\n  return {\n    request: function(config) {\n      inc();\n      return config || $q.when(config);\n    },\n    requestError: function(rejection) {\n      dec();\n      return $q.reject(rejection);\n    },\n    response: function(response) {\n      dec();\n      return response || $q.when(response);\n    },\n    responseError: function(rejection) {\n      dec();\n      return $q.reject(rejection);\n    }\n  };\n})\n.factory('authHttpInterceptor', function ($q, $rootScope, $location, $endpointService, $cookies) {\n  return {\n    'request': function(config) {\n      var ep = $endpointService.getSelected();\n\n      if (!ep) {\n        return config || $q.when(config);\n      }\n\n      var tokens = [];\n      var data = localStorage.getItem('tokens');\n      if(data){\n        tokens = JSON.parse(data);\n      }\n\n      var token = _.find(tokens, { 'name': ep.name });\n      var headerName = 'X-XSRF-TOKEN';\n      if (token) {\n        config.headers[headerName] = token.token;\n      }\n\n      if ($cookies['XSRF-TOKEN']) {\n        delete $cookies['XSRF-TOKEN'];\n      }\n\n      return config || $q.when(config);\n    },\n    'responseError': function(rejection) {\n      var status = rejection.status;\n      console.log(status);\n      if (status === 401) {\n        $location.path('/login');\n      }\n      return $q.reject(rejection);\n    }\n  };\n})\n.config(function ($httpProvider) {\n  $httpProvider.interceptors.push('progressHttpInterceptor');\n  $httpProvider.interceptors.push('authHttpInterceptor');\n})\n;\n\n","/* global _ */\nangular\n.module('ngManager')\n.factory('$authService', function($q, $location, $rootScope, $endpointService, $apiService) {\n\n  var tokens = [];\n  var data = localStorage.getItem('tokens');\n  if(data){\n    tokens = JSON.parse(data);\n  }\n\n  var logout = function(){\n\n    var ep = $endpointService.getSelected();\n\n    if(!ep){\n      return;\n    } else {\n      $apiService.get('/logout').then(function(){\n        tokens = _.filter(tokens, function(token){\n          return (token.name !== ep.name);\n        });\n        localStorage.setItem('tokens', JSON.stringify(tokens));\n        $rootScope.login = checkLogin(ep);\n      })\n      ;\n    }\n  };\n\n  var saveToken = function(token,ep){\n\n    // Update Token if exist\n    var item = _.findWhere(tokens, { 'name': ep.name });\n    if(item){\n      tokens[tokens.indexOf(item)].token = token;\n    } else {\n      tokens.push({\n        name: ep.name,\n        token: token\n      });\n    }\n\n    //save to local strage\n    var list = _.map(tokens, function(t) {\n      return _.pick(t, 'name', 'token');\n    });\n    localStorage.setItem('tokens', JSON.stringify(list));\n\n  };\n\n  var checkLogin = function(ep){\n    var list = _.find(tokens, function(t){\n      return t.name === ep.name;\n    });\n    return list;\n  };\n\n  return {\n\n    logout: logout,\n    \n    saveToken: saveToken,\n    \n    checkLogin: checkLogin\n\n  };\n\n})\n;\n\n","angular\n.module('ngManager')\n.controller('EndpointCtrl', function( $q, $scope, $rootScope, $schemaForm, $endpointService, $apiService, $errorService, $filter) {\n\n    var max_num = 3;\n    $scope.endpoints_org = $endpointService.getAll();\n    $scope.endpoints = $scope.endpoints_org.slice(0, max_num);\n\n    $scope.remove = function(index) {\n      $endpointService.remove(index);\n    };\n\n    $scope.select = function(index) {\n      $endpointService.select(index);\n      $apiService\n      .setup()\n      .then(function() {\n        location.hash = 'top';\n      }, function(err) {\n        $errorService.showError(err);\n      })\n      ;\n    };\n\n    var add = function(endpoint) {\n      $endpointService.add(endpoint);\n    };\n\n    $rootScope.$emit('content.title', {\n      section: 'Settings',\n      page: 'Endpoints'\n    });\n\n    $scope.loadMore = function(){\n      if(max_num < $scope.endpoints_org.length){\n        max_num++;\n        $scope.endpoints = $scope.endpoints_org.slice(0, max_num);\n      }\n    };\n\n    $scope.import = function(){\n      var file = document.getElementById(\"importfile\").files[0];\n      var reader = new FileReader();\n      var entities = null;\n      reader.readAsText(file, \"utf-8\");\n      reader.onload = function(e){\n        try{\n          entities = JSON.parse(e.target.result);\n        } catch(error) {\n          //todo error\n        }\n        if(entities !== null){\n          for(var i = 0; i < entities.length; i++){\n            $endpointService.add(entities[i]);\n          }\n        }\n      };\n    };\n\n    $scope.export = function(){\n\n      var filename = \"endpoint_\" + $filter('date')(new Date(), 'yyyyMMddHHmm') + \".json\";\n      var content = JSON.stringify($scope.endpoints_org);\n      window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n      window.requestFileSystem(window.TEMPORARY, 1024*1024, function(fileSystem){\n        // ファイル新規作成（上書き）\n        fileSystem.root.getFile(filename, {create: true, exclusive: false}, function(fileEntry){\n          // ファイル書き込み\n          fileEntry.createWriter(function(fileWriter){\n            var blob = new Blob([ content ], { \"type\" : \"text/plain\" });\n            fileWriter.write(blob);\n            // ファイル書き込み成功イベント\n            fileWriter.onwriteend = function(){\n              console.log(\"ファイル書き込み成功\");\n              var link = document.createElement('a');\n              link.href = fileEntry.toURL();\n              link.download = filename;\n              document.body.appendChild(link); // for Firefox\n              link.click();\n              document.body.removeChild(link); // for Firefox\n            };\n            // ファイル書き込み失敗イベント\n            fileWriter.onerror = function(e){\n              console.err(e);\n            };\n          });\n        }, function(error){\n            console.log(\"error.code=\" + error.code);\n        });\n      });\n    };\n\n    // Showing form for adding new schema\n    $scope.showForm = function($event) {\n\n      $schemaForm.showDialog({\n        title: 'Add the endpoint',\n        event: $event,\n        schema: {\n          type: 'object',\n          properties: {\n            name: { type: 'string', maxLength: 100, minLength: 1 },\n            url: { type: 'string', maxLength: 100, minLength: 1, format: 'uri', style: 'long' },\n          },\n          required: ['name','url']\n        },\n        submit: function(scope) {\n          var deferred = $q.defer();\n          var entity = scope.entity;\n          add(entity);\n          deferred.resolve();\n          return deferred.promise;\n        }\n      });\n\n    };\n\n  }\n);\n","/* global _ */\nangular\n.module('ngManager')\n.factory('$endpointService', function() {\n\n  var endpoints = [];\n  var data = localStorage.getItem(\"endpoints\");\n  if (data) {\n    endpoints = JSON.parse(data);\n  }\n\n  return {\n\n    getAll: function() {\n      return endpoints;\n    },\n\n    getSelected: function() {\n      return _.find(endpoints, function(ep) {\n        return ep.selected === true;\n      });\n    },\n\n    get: function(index) {\n      return endpoints[index];\n    },\n\n    add: function(endpoint) {\n      endpoints.push(endpoint);\n      this.save();\n    },\n\n    remove: function(index) {\n      endpoints.splice(index, 1);\n      this.save();\n    },\n\n    select: function(index) {\n      _.each(endpoints, function(ep, i) {\n        if (i === index) {\n          ep.selected = true;\n        } else {\n          delete ep.selected;\n        }\n      });\n      this.save();\n    },\n\n    save: function() {\n      var list = _.map(endpoints, function(ep) {\n        return _.pick(ep, 'name', 'url', 'selected');\n      });\n      localStorage.setItem('endpoints', JSON.stringify(list));\n    }\n  };\n\n});\n\n","/* global _ */\nangular\n.module('ngManager')\n.controller('EntityCtrl', function(\n  $q,\n  $scope,\n  $routeParams,\n  $rootScope,\n  $schemaForm,\n  $entityService,\n  $errorService,\n  $schemaNormalizer,\n  $window) {\n\n    var kind = $routeParams.kind;\n    var limit = 30;\n    var loadCount = 1;\n    var isLoading;\n    var isSearch = false;\n    var isFilter = false;\n\n    console.info('Entity', kind);\n\n    $rootScope.$emit('content.title', {\n      section: 'Entities',\n      page: kind\n    });\n\n    $scope.kind = kind;\n    $scope.filter_q = {};\n\n    var getFields = function(entityConfig) {\n      var features = entityConfig.features;\n      var schema = entityConfig.schema;\n      var fields = features.list && features.list.fields || _.keys(schema.properties);\n      return fields.map(function(field) {\n        if (typeof field === 'string') {\n          field = { id: field, label: field };\n        }\n        field.label = field.label || field.id;\n        if (field.label.indexOf('.') >= 0) {\n          field.label = field.id.substr(field.label.indexOf('.')+1);\n        } else {\n          field.label = field.id;\n        }\n        return field;\n      });\n    };\n\n    var getSearchSchema = function(entityConfig) {\n      // TODO : normalize\n      var schema = entityConfig.features.search && entityConfig.features.search.schema || {};\n      return $schemaNormalizer(schema);\n    };\n\n    $scope.list = function() {\n\n      isLoading = true;\n\n      $entityService.list({\n        kind: kind\n      }).then(function(data) {\n\n        // Get entity schema\n        var entityConfig = $entityService.getConfig(kind);\n        var fields = getFields(entityConfig);\n        var searchSchema = getSearchSchema(entityConfig);\n\n        $scope.fields = fields;\n        $scope.schema = entityConfig.schema;\n        $scope.rows = data.list;\n        $scope.searchSchema = searchSchema;\n\n        loadCount = data.list.length;\n\n        $scope.edit = function(row, id) {\n          row.editing = id;\n        };\n\n        $scope.blur = function(row) {\n          delete row.editing;\n        };\n\n        // update size after applying list\n        setTimeout(resize, 0);\n\n        isLoading = false;\n\n      }, function(err) {\n        $errorService.showError(err);\n      });\n    };\n\n    $scope.loadMore = function(){\n      if(isLoading || isSearch || isFilter) return;\n\n      var offset = loadCount;\n      isLoading = true;\n\n      $entityService.list({\n        kind: kind,\n        limit: limit,\n        offset: offset\n      }).then(function(data) {\n        if ( data.list.length !== 0 ) {\n          loadCount += data.list.length;\n          $scope.rows = $scope.rows.concat(data.list);\n        }\n        isLoading = false;\n      }, function(err) {\n        $errorService.showError(err);\n      });\n    };\n\n    $scope.export = function(){\n      $entityService.export(kind,$scope.rows);\n    };\n\n    $scope.import = function(){\n      $entityService.import(kind);\n    };\n\n    $scope.search = function(){\n      var query = $scope.searchForm;\n      $entityService.search({\n        kind: kind,\n        query: query\n      }).then(function(data) {\n        if ( data.list.length !== 0 ) {\n          $scope.rows = data.list;\n          isSearch = true;\n        }\n      }, function(err) {\n        $errorService.showError(err);\n      });\n    };\n\n    $scope.toggleSearchform = function(){\n\n      if(!$scope.searchForm){\n        $scope.searchForm = {};\n      }\n\n      if(!$scope.toggled){\n        $scope.toggled = true;\n      } else {\n        $scope.toggled = !$scope.toggled;\n      }\n    };\n\n    $scope.filter = function(){\n      $entityService.filter({\n        kind: kind,\n        query: $scope.filter_q\n      }).then(function(data) {\n        $scope.rows = data.list;\n        isFilter = true;\n      }, function(err) {\n        $errorService.showError(err);\n      });\n    };\n\n    var resize = function() {\n      var body = document.getElementById('entity-table-body');\n      var rect = body.getBoundingClientRect();\n      // get body height\n      var th = Math.floor($window.innerHeight - rect.top);\n      body.style.height = th + 'px';\n    };\n\n    $scope.$on('window.resize', resize);\n\n    $scope.list();\n\n})\n;\n\n","/* global _ */\nangular\n.module('ngManager')\n.directive('entityTable', function($entityService) {\n\n  return {\n    restrict: 'AE',\n    link: function(scope) {\n\n      var kind = scope.kind;\n\n      scope.add = function() {\n        $entityService.showForm({ kind: kind }, function(data) {\n        });\n      };\n\n      scope.$on('entity.removed', function(e, data) {\n        var rows = scope.rows;\n        rows.splice(rows.indexOf(data.row), 1);\n      });\n\n    },\n    templateUrl: 'entity/table.html'\n  };\n\n})\n.directive('headCell', function() {\n\n  return {\n\n    restrict: 'AE',\n    scope: false,\n    replace: true,\n    link: function(scope) {\n\n      scope.opening = '';\n\n      scope.open = function(){\n        scope.opening = 'is_open';\n      };\n\n      scope.close = function(){\n        scope.opening = '';\n      };\n      \n      scope.blur = function(){\n        scope.opening = '';\n      };\n\n    },\n    templateUrl: 'entity/head-cell.html'\n\n  };\n\n})\n.directive('entityRow', function($entityService, $errorService, $document, $rootScope) {\n\n  return {\n\n    restrict: 'AE',\n    scope: {\n      row: '=',\n      fields: '=',\n      kind: '='\n    },\n    replace: true,\n    link: function(scope) {\n\n      var kind = scope.kind;\n      var row = scope.row;\n\n      scope.key = $entityService.getKey({ kind: kind, entity: row });\n\n      // show modification form\n      scope.edit = function() {\n\n        $entityService\n        .get({ kind: kind, key: scope.key })\n        .then(function(data) {\n          $entityService.showForm({\n            kind: kind,\n            key: scope.key,\n            entity: data\n          }).then(function() {\n            scope.row = data;\n          });\n        }, function(err) {\n          $errorService.showError(err);\n        });\n\n      };\n\n      // remove the entity of the row\n      scope.remove = function() {\n\n        if (scope.removing) {\n\n          var key = $entityService.getKey({ kind: kind, entity: row });\n\n          $entityService\n          .remove({ kind: kind, key: key })\n          .then(function() {\n            $rootScope.$broadcast('entity.removed', {\n              kind: kind,\n              key: key,\n              row: row\n            });\n          }, function(err) {\n            $errorService.showError(err);\n          });\n\n        } else {\n\n          scope.removing = true;\n\n        }\n\n      };\n\n      scope.cancelRemoving = function() {\n        delete scope.removing;\n      };\n\n      scope.$on('$destroy', function() {\n        $document.off('click', scope.cancelRemoving);\n      });\n\n    },\n    templateUrl: 'entity/row.html'\n\n  };\n\n})\n.directive('entityCell', function($entityService, $mdDialog) {\n\n  return {\n\n    restrict: 'AE',\n    scope: {\n      field: '=',\n      key: '=',\n      row: '=',\n      kind: '='\n    },\n    replace: true,\n    link: function(scope, element) {\n\n      var kind = scope.kind;\n      var row = scope.row;\n      var field = scope.field;\n      var key = scope.key;\n\n      scope.edit = function() {\n        scope.editing = true;\n        setTimeout(function() {\n\n          var save = function() {\n            scope.saving = true;\n            scope.error = false;\n            if (typeof orig === 'string') {\n              row[field.id] = input[0].value;\n            } else {  \n              try {\n                row[field.id] = JSON.parse(input[0].value);\n              } catch (err) {\n                console.log(\"ERROR. JSON.parse failed\");\n                scope.error = err;\n                scope.saving = false;\n                return;\n              }\n            }\n            // TODO : validation\n\n            $entityService.saveField({\n              kind: kind,\n              key: key,\n              field: field.id,\n              value: row[field.id]\n            }).then(function() {\n              scope.saving = false;\n            }, function(err) {\n              scope.saving = false;\n              scope.error = err;\n            });\n            scope.$digest();\n          };\n\n          var input = element.find('input');\n          input.focus();\n          var orig = row[field.id];\n          input.bind('keyup', function(evt) {\n            switch (evt.keyCode) {\n              case 27: // ESC\n                row[field.id] = orig;\n                scope.$digest();\n                input.blur();\n                break;\n              case 13: // ENTER\n                save();\n                input.blur();\n                break;\n            }\n          });\n          input.bind('blur', function() {\n            if (orig !== row[field.id]) {\n              // Saving new value?\n              // save();\n            }\n          });\n        }, 0);\n      };\n\n      if(field.preview){\n        scope.openOpt = function(){\n          $mdDialog.show({\n            template: '<md-dialog md-theme=\"previewDialog\" aria-label=\"Preview dialog\"><preview-dialog /></md-dialog>',\n            targetEvent: event,\n            controller: ['$scope', function($scope) {\n              $scope.field = field;\n              $scope.row = row;\n              $scope.kind = kind;\n            }]\n          });\n        };\n      }\n\n      scope.blur = function() {\n        scope.editing = false;\n      };\n\n    },\n    templateUrl: 'entity/cell.html'\n\n  };\n\n})\n.directive('previewDialog', function() {\n\n  return {\n\n    restrict: 'AE',\n    templateUrl: 'entity/preview-dialog.html'\n\n  };\n\n})\n.directive('previewItem', function($compile) {\n\n  return {\n\n    restrict: 'AE',\n    link: function(scope, element) {\n      var field = scope.field;\n      var data = scope.row;\n\n      var template = '';\n      var url = field.preview.url.replace(/\\{.+?\\}/, data[field.id]);\n\n      switch (field.preview.type) {\n        case 'image':\n          template = '<img src=\"'+url+'\" />';\n          break;\n        case 'video':\n          template = '<video controls autoplay><source src=\"'+url+'\"></video>';\n          break;\n      }\n      var content = $compile(angular.element(template))(scope);\n      element.append(content);\n    }\n\n  };\n\n})\n;\n\n","angular\n.module('ngManager')\n.filter('viewfilter', function ($filter) {\n  return function (input, type, format) {\n\n    if(typeof(input) === 'object'){\n      input = JSON.stringify(input);\n    }\n\n    switch(type){\n      case 'date':\n        format = format || 'medium';\n        return $filter('date')(input,format);\n\n      // add custom type here\n      // case 'foo': return var\n\n      default:\n        return input;\n    }\n  };\n});","/* global _ */\nangular\n.module('ngManager')\n.service('$entityService', function($q, $apiService, $schemaForm, $filter) {\n\n  var getEntityConfig = function(kind) {\n    return _.find($apiService.getConfig().entities, function(entity) {\n      return entity.id === kind;\n    });\n  };\n\n  // normalize data fields\n  var normalizeFields = function(data) {\n\n    var features = data.features || {};\n\n    var fields = (features.list && features.list.fields) || _.keys(data.schema.properties);\n\n    return _.map(fields, function(field) {\n      if (typeof field === 'string') {\n        return { id: field };\n      } else {\n        return field;\n      }\n    });\n\n  };\n\n  return {\n\n    getConfig: getEntityConfig,\n\n    list: function(opts) {\n\n      opts = opts || {};\n\n      var deferred = $q.defer();\n\n      var kind = opts.kind || '';\n      var limit = opts.limit || 30;\n      var offset = opts.offset || 0;\n\n      if (kind === '') {\n        deferred.reject(new Error('Kind is empty'));\n        return deferred.promise;\n      }\n\n      $apiService\n      .get('/entity/'+kind, {\n        limit: limit,\n        offset: offset\n      })\n      .then(function(data) {\n\n        var config = getEntityConfig(kind);\n        if (config === undefined) {\n          deferred.reject({\n            message: 'Entity configuration not found for {{kind}}',\n            params: { kind: kind }\n          });\n        } else {\n          data.fields = normalizeFields(config);\n          deferred.resolve(data);\n        }\n\n      }, function(err) {\n        deferred.reject(err);\n      })\n      ;\n\n      return deferred.promise;\n\n    },\n\n    get: function(opts) {\n\n      opts = opts || {};\n\n      return $q(function(resolve, reject) {\n\n        var kind = opts.kind || '';\n        if (kind === '') {\n          return reject(new Error('kind is empty'));\n        }\n\n        var key = opts.key;\n        if (key === undefined) {\n          return reject(new Error('key is null'));\n        }\n\n        $apiService\n        .get('/entity/'+kind+'/'+key)\n        .then(function(data) {\n          var config = getEntityConfig(kind);\n          if (config === undefined) {\n            reject({\n              message: 'Entity configuration not found for {{kind}}',\n              params: { kind: kind }\n            });\n          } else {\n            resolve(data);\n          }\n        }, reject);\n      });\n    },\n\n    showForm: function(opts) {\n\n      var kind = opts.kind;\n      var key = opts.key;\n      var entity = opts.entity || {};\n      var spec = getEntityConfig(kind);\n      var _this = this;\n      var submit = function() {\n        if(!key){\n          key = _this.getKey({\n            kind: kind,\n            entity: entity\n          });\n        }\n        return $apiService.put('/entity/'+kind+'/'+key, entity);\n      };\n\n      return $schemaForm.showSide({\n        schema: spec.schema,\n        entity: entity,\n        submit: submit\n      });\n    },\n\n    getKey: function(opts) {\n      var kind = opts.kind;\n      var entity = opts.entity;\n      var spec = getEntityConfig(kind);\n      var keys = spec.schema.primaryKey;\n      var key = keys.map(function(key) {\n        return encodeURIComponent(entity[key]);\n      }).join(',');\n      return key;\n    },\n\n    saveField: function(opts) {\n\n      var kind = opts.kind;\n      var key = opts.key;\n      var field = opts.field;\n      var value = opts.value;\n\n      return $apiService\n      .put('/entity/'+kind+'/'+key+'/'+field, { value: value })\n      ;\n\n    },\n\n    remove: function(opts) {\n\n      var kind = opts.kind;\n      var key = opts.key;\n\n      return $apiService.del('/entity/'+kind+'/'+key);\n    },\n\n    search: function(opts) {\n\n      return $q(function(resolve, reject) {\n\n        var kind = opts.kind;\n        if (kind === '') {\n          return reject(new Error('kind is empty'));\n        }\n\n        var query = opts.query || '';\n        if (query === '') {\n          return reject(new Error('query is null'));\n        }\n\n        $apiService\n        .get('/search/entity/'+kind, {\n          query: query,\n          limit: -1,\n          offset: 0\n        })\n        .then(function(data) {\n          var config = getEntityConfig(kind);\n          if (config === undefined) {\n            reject({\n              message: 'Entity configuration not found for {{kind}}',\n              params: { kind: kind }\n            });\n          } else {\n            resolve(data);\n          }\n        }, reject);\n      });\n    },\n\n\n    filter: function(opts) {\n      return $q(function(resolve, reject) {\n\n        var kind = opts.kind;\n        if (kind === '') {\n          return reject(new Error('kind is empty'));\n        }\n\n        var query = opts.query || '';\n        if (query === '') {\n          return reject(new Error('query is null'));\n        }\n\n        $apiService\n        .get('/filter/entity/'+kind, {\n          query: query,\n          limit: -1,\n          offset: 0\n        })\n        .then(function(data) {\n          var config = getEntityConfig(kind);\n          if (config === undefined) {\n            reject({\n              message: 'Entity configuration not found for {{kind}}',\n              params: { kind: kind }\n            });\n          } else {\n            resolve(data);\n          }\n        }, reject);\n      });\n    },\n\n    import: function(kind){\n      var _this = this;\n      var file = document.getElementById(\"importfile\").files[0];\n      var reader = new FileReader();\n      var entities = null;\n      reader.readAsText(file, \"utf-8\");\n\n      reader.onload = function(e){\n\n        try{\n          entities = JSON.parse(e.target.result);\n        } catch(error) {\n          console.err(error);\n        }\n\n        // TODO: validation\n\n        if(entities !== null){\n          for(var i = 0; i < entities.length; i++){\n            var key = _this.getKey({\n              kind: kind,\n              entity: entities[i]\n            });\n            $apiService.put('/entity/'+kind+'/'+key, entities[i]);\n          }\n        }\n\n      };\n\n    },\n\n    export: function(kind){\n\n      this.list({\n        kind: kind,\n        limit: -1 // getAll\n      })\n      .then(function(data) {\n        var rows = data.list;\n        var filename = kind+ \"_\" + $filter('date')(new Date(), 'yyyyMMddHHmm') + \".json\";\n        var content = JSON.stringify(rows);\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        window.requestFileSystem(TEMPORARY, 1024*1024, function(fileSystem){\n          // create\n          fileSystem.root.getFile(filename, {create: true, exclusive: false}, function(fileEntry){\n            // write\n            fileEntry.createWriter(function(fileWriter){\n              var blob = new Blob([ content ], { \"type\" : \"text/plain\" });\n              fileWriter.write(blob);\n              // success\n              fileWriter.onwriteend = function(e){\n                console.info(\"writing success\");\n                var link = document.createElement('a');\n                link.href = fileEntry.toURL();\n                link.download = filename;\n                document.body.appendChild(link); // for Firefox\n                link.click();\n                document.body.removeChild(link); // for Firefox\n              };\n              // failed\n              fileWriter.onerror = function(e){\n                console.log(\"writing failed\");\n              };\n            });\n          }, function(error){\n              console.log(\"error : \" + error.code);\n          });\n        });\n      });\n    }\n  };\n\n})\n;\n\n","angular\n.module('ngManager')\n.factory('$errorService', function($mdToast) {\n\n  var showError = function(err) {\n    var msg = '';\n    if (typeof err === 'string') {\n      msg = err;\n    } else if (err.message) {\n      msg = err.message;\n    } else if (err) {\n      msg = err.toString();\n    } else {\n      msg = 'Unknown Error';\n    }\n\n    $mdToast.show({\n      controller: ['$scope', function($scope) {\n        $scope.message = msg;\n        $scope.params = err.params || {};\n        $scope.closeToast = function() {\n          $mdToast.hide();\n        };\n      }],\n      templateUrl: 'toasts/error.html',\n      duration: 6000,\n      position: 'top right'\n    });\n  };\n\n  return {\n\n    showError: showError,\n\n  };\n\n})\n;\n","angular\n.module('ngManager')\n.config(function($translateLoaderProvider) {\n\n  $translateLoaderProvider.translations('en', {\n    name: 'Name',\n    url: 'URL'\n  });\n\n})\n;\n","angular\n.module('ngManager')\n.config(function($translateLoaderProvider) {\n\n  $translateLoaderProvider.translations('ja', {\n    // Words\n    Add: '追加',\n    Cancel: 'キャンセル',\n    Close: '閉じる',\n    Create: '作成',\n    Endpoints: 'エンドポイント',\n    Entities: 'データ',\n    Name: '名前',\n    Update: '更新',\n    Modify: '編集',\n    Remove: '削除',\n    Search: '検索',\n    Settings: '設定',\n    Submit: '送信',\n    Top: 'トップ',\n    // Labels\n    name: '名前',\n    url: 'URL',\n    // Sentences\n    'Add the endpoint': 'エンドポイント追加',\n\n    'Entity configuration not found for {{kind}}': '{{kind}}のデータ設定が見つかりません'\n  });\n\n})\n;\n\n","angular\n.module('ngManager')\n.provider('$translateLoader', function() {\n\n  var tables = {};\n\n  var mergeTables = function(table, lang) {\n    var map = tables[lang];\n    if (!map) {\n      map = tables[lang] = {};\n    }\n    tables[lang] = _.merge(table, map);\n  };\n\n  this.translations = function(lang, table) {\n    mergeTables(table, lang);\n  };\n\n  this.$get = function($q) {\n\n    var service = function(options) {\n      var key = options.key;\n      var deferred = $q.defer();\n      deferred.resolve(tables[key] || {});\n      return deferred.promise;\n    };\n\n    service.addTables = function(newTables) {\n      _.each(newTables, mergeTables);\n    };\n\n    return service;\n  };\n})\n.config(function($translateProvider) {\n  $translateProvider.useLoader('$translateLoader');\n  $translateProvider.determinePreferredLanguage();\n});\n\n\n","\nangular\n.module('ngManager')\n.controller('IndexCtrl', function(\n  $scope,\n  $rootScope,\n  $mdSidenav,\n  $timeout,\n  $interval,\n  $location,\n  $window,\n  $translate,\n  $translateLoader,\n  $endpointService,\n  $authService) {\n\n    $scope.toggleMenu = function() {\n      $timeout(function() {\n        $mdSidenav('left-menu').toggle();\n      });\n    };\n\n    $scope.site = { title: 'NG-Manager' };\n\n    $scope.head = { title: '' };\n\n    $rootScope.$on('content.title', function(evt, title) {\n      $scope.head.title = title;\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function() {\n      $scope.hash = location.hash;\n      $mdSidenav('left-menu').close();\n    });\n\n    $rootScope.$on('progress.start', function() {\n      $scope.progress = { mode: 'query', value: 0 };\n    });\n\n    $rootScope.$on('progress.end', function() {\n      var progress = $scope.progress;\n      if (progress.mode === 'query') {\n        $timeout(function() {\n          $scope.progress = false;\n        }, 500);\n      } else if (progress.mode === 'determinate') {\n        var p = $interval(function() {\n          progress.value += 20;\n          if (progress.value >= 100) {\n            $interval.cancel(p);\n            $timeout(function() {\n              delete $scope.progress;\n            }, 400);\n          }\n        }, 50);\n      }\n    });\n\n    $scope.openRight = true;\n\n    $rootScope.$on('config', function(evt, config) {\n      console.info('Loaded configuration', config);\n      $scope.config = config;\n      $scope.site = config.site;\n\n      if (config.i18n) {\n        $translateLoader.addTables(config.i18n);\n        $translate.refresh();\n      }\n    });\n\n    $window.addEventListener('resize', function() {\n      $rootScope.$broadcast('window.resize');\n    });\n\n    $scope.logout = function(){\n\n      $authService.logout();\n      $location.url('/login');\n\n    };\n});\n","angular\n.module('ngManager')\n.controller('LoginCtrl', function($scope, $rootScope, $endpointService) {\n\n  $rootScope.$emit('content.title', {\n    section: 'Login'\n  });\n\n  $scope.getUrl = function(path) {\n    var ep = $endpointService.getSelected();\n    var url = ep.url.replace(/(.*)\\/+$/,'$1');\n    path = path.replace(/^\\/+(.*)$/, '$1');\n    return url + '/' + path;\n  };\n\n})\n;\n","angular\n.module('ngManager')\n.factory('$schemaForm', function(\n  $mdDialog,\n  $rootScope,\n  $sideContent,\n  $schemaNormalizer,\n  $schemaValidator,\n  $q) {\n\n  var validator = function(scope) {\n    return function(path) {\n      var errors = $schemaValidator.validate(scope.entity, scope.schema);\n      if (errors) {\n        errors.forEach(function(err) {\n          scope.errors[err.path] = err.message;\n        });\n        scope.hasError = true;\n      } else {\n        if (path) {\n          delete scope.errors[path];\n        } else {\n          scope.errors = {};\n        }\n        scope.hasError = false;\n      }\n    };\n  };\n\n  var submitter = function(scope, interim, submit, deferred) {\n    return function() {\n      scope.validate();\n      if (scope.hasError) {\n        return;\n      }\n      if (!submit) {\n        interim.hide();\n        deferred.reject();\n      }\n      submit(scope).then(function() {\n        interim.hide();\n        deferred.resolve(scope.entity);\n      }, function(err) {\n        deferred.reject(err);\n      });\n    };\n  };\n\n  var canceller = function(scope, interim, deferred) {\n    return function() {\n      interim.hide();\n      deferred.reject();\n    };\n  };\n\n  return {\n    showDialog: function(opts) {\n\n      opts = opts || {};\n\n      var schema = opts.schema;\n      var entity = opts.entity || {};\n      var event = opts.event;\n      var deferred = $q.defer();\n      var submit = opts.submit;\n      var theme = opts.theme || 'dialog';\n      // normalize schea\n      schema = $schemaNormalizer(schema);\n\n      $mdDialog.show({\n        template: '<md-dialog md-theme=\"'+theme+'\"><schema-form /></md-dialog>',\n        targetEvent: event,\n        controller: ['$scope', function($scope) {\n          $scope.schema = schema;\n          $scope.entity = entity;\n          $scope.title = opts.title || '';\n          $scope.errors = {};\n          $scope.validate = validator($scope);\n          $scope.submit = submitter($scope, $mdDialog, submit, deferred);\n          $scope.cancel = canceller($scope, $mdDialog, deferred);\n        }]\n      });\n\n      return deferred.promise;\n    },\n\n    showSide: function(opts) {\n\n      var schema = opts.schema;\n      var entity = opts.entity || {};\n      var deferred = $q.defer();\n      var submit = opts.submit;\n\n      // normalize schea\n      schema = $schemaNormalizer(schema);\n\n      var scope = $rootScope.$new();\n      scope.schema = schema;\n      scope.entity = entity;\n      scope.errors = {};\n      scope.validate = validator(scope);\n\n      var interim = $sideContent(scope);\n\n      scope.submit = submitter(scope, interim, submit, deferred);\n      scope.cancel = canceller(scope, interim, deferred);\n\n      interim.show();\n\n      return deferred.promise;\n    }\n\n  };\n\n})\n.directive('schemaForm', function() {\n\n  return {\n    restrict: 'AE',\n    templateUrl: 'schema-form/form.html'\n  };\n\n})\n.directive('schemaItem', function($compile, $templateCache) {\n\n  var linker = function(scope, element) {\n\n    var schema = scope.schema;\n    var template = \"\";\n    switch(schema.type) {\n      case 'string':\n        if (schema.enum) {\n          template = $templateCache.get('schema-form/input_radio.html');\n        }else{\n          template = $templateCache.get('schema-form/input.html');\n        }\n        break;\n      case 'boolean':\n        template = $templateCache.get('schema-form/input_boolean.html');\n        break;\n      case 'number':\n        template = $templateCache.get('schema-form/input_number.html');\n        break;\n      case 'object':\n        scope.entity[scope.schema.path] = scope.entity[scope.schema.path] || {};\n        template = $templateCache.get('schema-form/input_object.html');\n        break;\n      case 'array':\n        if (schema.items && schema.items.enum) {\n          scope.entity[scope.schema.path] = scope.entity[scope.schema.path] || [];\n          template = $templateCache.get('schema-form/input_checkboxes.html');\n        } else {\n          scope.entity[scope.schema.path] = scope.entity[scope.schema.path] || [];\n          template = $templateCache.get('schema-form/input_array.html');\n        }\n        break;\n    }\n    \n    var content = $compile(angular.element(template))(scope);\n    \n    if (schema.style) {\n      content.addClass(schema.style);\n    }\n\n    element.append(content);\n  };\n\n  return {\n    scope: {\n      schema: '=',\n      entity: '=',\n      errors: '='\n    },\n    restrict: 'AE',\n    replace: true,\n    link: linker\n  };\n\n})\n;\n","/* global _ */\nangular\n.module('ngManager')\n.factory('$schemaNormalizer', function() {\n\n  var normalize = function(schema, path, key) {\n\n    // prevent normalizing twice\n    if (schema.$$normalized) {\n      return schema;\n    }\n\n    if (typeof schema === 'string') {\n      schema = { type: schema };\n    }\n\n    if (path) {\n      schema.path = path + '.' + key;\n    } else {\n      schema.path = key;\n    }\n\n    schema.key = key;\n\n    if (schema.type === 'object') {\n      // Normalize children\n      _.each(schema.properties, function(prop, key) {\n        schema.properties[key] = normalize(prop, path, key);\n      });\n      schema.keyOrder = _.keys(schema.properties);\n    }\n\n    if (schema.type === 'array') {\n      // Normalize children\n      _.each(schema.items, function(prop, key) {\n        schema.items[key] = normalize(prop, path, key);\n      });\n      schema.keyOrder = _.keys(schema.items);\n    }\n\n    // Mark as normalized\n    schema.$$normalized = true;\n\n    return schema;\n  };\n\n  return normalize;\n\n});\n","/* global tv4,_ */\nangular\n.module('ngManager')\n.factory('$schemaValidator', function() {\n      \n  /**\n  * formats\n  */\n  var formats = {\n    /**\n     * This SHOULD be a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time.\n     * This is the recommended form of date/timestamp.\n     *\n     * Also supports YYYY-MM-DDThh:mm:ss.SSSTZD (e.g. 2012-12-10T19:20:30.456+09:00)\n     */\n    'date-time': /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{1,3})?(?:Z|[+\\-]\\d{2}:\\d{2})$/,\n\n    /**\n     * This SHOULD be a date in the format of YYYY-MM-DD.\n     * It is recommended that you use the \"date-time\" format\n     * instead of \"date\" unless you need to transfer only the date part.\n     */\n    'date': /^\\d{4}-\\d{2}-\\d{2}$/,\n\n    /**\n     * This SHOULD be a time in the format of hh:mm:ss.\n     * It is recommended that you use the \"date-time\" format\n     * instead of \"time\" unless you need to transfer only the time part.\n     *\n     * Also supports hh:mm:ss.SSS (e.g. 19:20:30.456)\n     */\n    'time': /^\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{1,3})?$/,\n\n    /**\n     * This SHOULD be the difference, measured in milliseconds,\n     * between the specified time and midnight, 00:00 of January 1, 1970 UTC.\n     * The value SHOULD be a number (integer or float).\n     */\n    'utc-millisec': function(input) { return !isNaN(parseInt(input,10));},\n\n    /**\n     * A regular expression, following the regular expression specification\n     * from ECMA 262/Perl 5.\n     */\n    'regex': function(input) {\n      try {\n        new RegExp(input);\n      } catch(e) {\n        return false;\n      }\n      return true;\n    },\n\n    /**\n     * This is a CSS color (like \"#FF0000\" or \"red\"),\n     * based on CSS 2.1 [W3C.CR-CSS21-20070719].\n     * rgb() format is also allowed.\n     * Not only 17 'basic color names specified in CSS 2.1, 143 'X11 color names' are also allowed.\n     */\n    'color': /^(?:(?:#?[0-9a-fA-F]{3,6})|(?:rgb\\(\\s*\\b(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(?:rgb\\(\\s*(?:\\d?\\d%|100%)\\s*,\\s*(?:\\d?\\d%|100%)\\s*,\\s*(?:\\d?\\d%|100%)\\s*\\))|(?:maroon|red|orange|yellow|olive|green|purple|fuchsia|lime|teal|aqua|blue|navy|black|gray|silver|white|indianred|lightcoral|salmon|darksalmon|lightsalmon|crimson|firebrick|darkred|pink|lightpink|hotpink|deeppink|mediumvioletred|palevioletred|lightsalmon|coral|tomato|orangered|darkorange|gold|lightyellow|lemonchiffon|lightgoldenrodyellow|papayawhip|moccasin|peachpuff|palegoldenrod|khaki|darkkhaki|lavender|thistle|plum|violet|orchid|magenta|mediumorchid|mediumpurple|amethyst|blueviolet|darkviolet|darkorchid|darkmagenta|indigo|slateblue|darkslateblue|mediumslateblue|greenyellow|chartreuse|lawngreen|limegreen|palegreen|lightgreen|mediumspringgreen|springgreen|mediumseagreen|seagreen|forestgreen|darkgreen|yellowgreen|olivedrab|darkolivegreen|mediumaquamarine|darkseagreen|lightseagreen|darkcyan|cyan|lightcyan|paleturquoise|aquamarine|turquoise|mediumturquoise|darkturquoise|cadetblue|steelblue|lightsteelblue|powderblue|lightblue|skyblue|lightskyblue|deepskyblue|dodgerblue|cornflowerblue|mediumslateblue|royalblue|mediumblue|darkblue|midnightblue|cornsilk|blanchedalmond|bisque|navajowhite|wheat|burlywood|tan|rosybrown|sandybrown|goldenrod|darkgoldenrod|peru|chocolate|saddlebrown|sienna|brown|snow|honeydew|mintcream|azure|aliceblue|ghostwhite|whitesmoke|seashell|beige|oldlace|floralwhite|ivory|antiquewhite|linen|lavenderblush|mistyrose|gainsboro|lightgrey|darkgray|dimgray|lightslategray|slategray|darkslategray))$/i,\n\n    /**\n     * This is a CSS style definition (like \"color: red; background-color:#FFF\"),\n     * based on CSS 2.1 [W3C.CR-CSS21-20070719].\n     */\n    'style': /^\\s*[^:]+\\s*:\\s*[^:;]+\\s*;{0,1}\\s*$/,\n\n    /**\n     * This value SHOULD be a URI.\n     *\n     * http://snipplr.com/view/6889/regular-expressions-for-uri-validationparsing/\n     */\n    'uri': /^(?:(?:[a-z0-9+.\\-]+:\\/\\/)(?:(?:(?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?(?:(?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(?:\\d*))?(?:\\/(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?|(?:[a-z0-9+.\\-]+:)(?:\\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?)(?:\\?(?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*)?(?:#(?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*)?$/i,\n\n    /*\n     * This SHOULD be an email address.\n     *\n     * http://fightingforalostcause.net/misc/2006/compare-email-regex.php\n     */\n    'email': /^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$/i,\n\n    /**\n     * This SHOULD be an ip version 4 address.\n     */\n    'ipv4': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n\n    /**\n     * This SHOULD be an ip version 6 address.\n     *\n     * http://home.deds.nl/~aeron/regex/\n     */\n    'ipv6': /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\n\n    /**\n     * This SHOULD be a host-name.\n     */\n    'host-name'\n      : /^(?:(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$/\n  };\n \n\n  _.each(formats, function(format, key) {\n\n    if (typeof format === 'function') {\n      tv4.addFormat(key, function(data) {\n        // do not check empty value\n        if (data === null || data === undefined || data.length === 0) {\n          return null;\n        }\n        if (format(data)) {\n          return null;\n        } else {\n          return 'must be valid format: ' + key;\n        }\n      });\n    } else {\n      tv4.addFormat(key, function(data) {\n        // do not check empty value\n        if (data === null || data === undefined || data.length === 0) {\n          return null;\n        }\n        if (format.test(data)) {\n          return null;\n        } else {\n          return 'must be valid ' + key;\n        }\n      });\n    }\n  });\n\n  var normalize = function(data) {\n\n    if (typeof data === 'object') {\n      // remove empty data\n      _.each(data, function(val, key) {\n        if (val === '' || val === undefined || val === null) {\n          delete data[key];\n        } else if (typeof val === 'object') {\n          normalize(data[key]);\n        }\n      });\n    }\n  };\n\n  return {\n\n    validate: function(data, schema, path) {\n\n      normalize(data);\n\n      var result = tv4.validateMultiple(data, schema);\n      if (result.valid) {\n        return null;\n      } else {\n        _.each(result.errors, function(err) {\n          var keyPath = '/';\n          if (err.dataPath) {\n            keyPath = err.dataPath;\n          }\n          if (err.params.key) {\n            keyPath = err.dataPath + '/' + err.params.key;\n          }\n          keyPath = keyPath.split('/');\n          keyPath.shift();\n          err.path = keyPath.join('.');\n        });\n        if (path) {\n          for (var i = 0; i < result.errors.length; i++) {\n            var err = result.errors[i];\n            if (err.path === path) {\n              return [err];\n            }\n          }\n          return null;\n        } else {\n          return result.errors;\n        }\n      }\n    }\n\n  };\n\n});\n\n","angular\n.module('ngManager')\n.service('$sideContent', function($rootElement,\n                                  $mdSidenav,\n                                  $mdTheming,\n                                  $animate,\n                                  $timeout,\n                                  $window,\n                                  $compile) {\n\n  var lastScope = null;\n  var lastElement = null;\n\n  return function(scope) {\n\n    if (lastScope) {\n      lastScope.$destroy();\n      lastElement.remove();\n      lastScope = null;\n    }\n\n    var element = $compile('<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 side-form\" md-theme=\"side\" md-component-id=\"right-form\"><md-content layout=\"column\"><schema-form /></md-content></md-sidenav>')(scope);\n\n    var show = function() {\n      $rootElement.find('body').append(element);\n      $mdSidenav('right-form').toggle();\n      lastScope = scope;\n      lastElement = element;\n    };\n\n    var hide = function() {\n      $mdSidenav('right-form').close();\n    };\n\n    return {\n      show: show,\n      hide: hide\n    };\n  };\n});\n","angular\n.module('ngManager')\n.controller('TopCtrl', function($rootScope) {\n\n  $rootScope.$emit('content.title', {\n    section: 'Top'\n  });\n\n})\n;\n","(function() {\n  'use strict';\n\n  var app;\n\n  app = angular.module('datePicker', ['mgcrea.ngStrap', 'ngMaterial', 'ui.utils']);\n\n  app.directive('mdDatePicker', [    \n    '$datepicker', function($datepicker) {      \n      return {\n        template: '<div class=\"md-toolbar-tools dark\">' + ' <md-input-container ng-disabled=\"isDisabled\">' + '     <label>{{label}}</label>' + '    <input data-date-format=\"yyyy-MM-dd\" id=\"date-picker\" model-view-value=\"true\"' + '             ng-model=\"value\" bs-datepicker></md-input>' + '</md-input-container>' + '</div>',\n        restrict: 'E',\n        scope: {\n          lineColor: \"@\",\n          textColor: \"@\",\n          mask: \"@\"\n        },\n        link: function(scope, element, attrs) {\n          var picker;\n          picker = $(\"#date-picker\");\n          if (scope.textColor) {\n            picker.css(\"color\", scope.textColor, \"important\");\n          }\n          if (scope.lineColor) {\n            picker.css(\"border-color\", scope.lineColor, \"important\");\n          }\n        }\n      };\n    }\n  ]);\n\n}).call(this);\n"],"sourceRoot":"/source/"}